#!/bin/bash

SCROLLBACK=100

#position cursor - CAUTION: coordinates are numbered from 1
function set_cursor {
	echo -en "\e[$1;$2H"
}

function cursor_invisible {
	echo -en "\e[?25l"
}

#reset cursor to normal (visible) style
function cursor_reset {
	echo -en "\e[34h\e[?25h"
}

function manual_clear {
	echo -en '\e[H\e[J'
}

function spawn_window {
	windowcontent[$current_window]="${windowcontent[$current_window]}
spawning: $1"
}

function control_loop {
	while true
	do	windowcontent[$current_window]="${windowcontent[$current_window]}
$line"
		draw_window
		cursor_reset
		read line
		if [ "$line" = "/clear" ]
		then windowcontent[$current_window]=""
			line=
		fi
		if [ "$line" = "/quit" ]
		then exit
			line=
		fi
		if [[ "$line" =~ ^/connect\ (.*) ]]
		then spawn_window "${BASH_REMATCH[1]}"
			line=
		fi
	done
}

#the window list
declare -a windowcontent
declare -a windowtitle
window_count=0
current_window=0

windowtitle[0]="baz"

function draw_window {
	#clear screen
	cursor_invisible
	manual_clear
	#window content
	lines=$((i=0; while read line; do let i=i+1; done; echo $i)<<<"$i")
	#The following lines do about the same as 'tail -n x'
	windowcontent=$((
		for i in $(seq 1 $((lines-SCROLLBACK)))
		do	read line #and discard
		done
		#print the rest
		while read line
		do	echo $line
		done
		)<<<"${windowcontent[$current_window]}")
	echo
	echo "$windowcontent"
	#titlebar
	set_cursor 1 1
	echo "${windowtitle[$current_window]}"
	#set_cursor 1 $LINES
	echo -n ">"
}

trap draw_window SIGUSR1
trap manual_clear 0

control_loop


